[project]
name = "fastapi-cloudrun-kit"
version = "0.1.0"
description = "Production-ready FastAPI boilerplate for Google Cloud Run with Firebase"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
]

dependencies = [
    "fastapi[all]>=0.104.0",
    "firebase-admin>=6.4.0",
    "pydantic[email]>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-multipart>=0.0.6",
    "uvicorn[standard]>=0.24.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "httpx>=0.25.0",
    "structlog>=23.2.0",
    "rich>=13.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "pytest-env>=1.1.0",
    "httpx>=0.25.0",
    "pre-commit>=3.6.0",
    "ruff>=0.1.6",
    "black>=23.11.0",
    "mypy>=1.7.0",
    "types-requests>=2.31.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/fastapi-cloudrun-kit"
Repository = "https://github.com/yourusername/fastapi-cloudrun-kit"
Issues = "https://github.com/yourusername/fastapi-cloudrun-kit/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "pytest-env>=1.1.0",
    "httpx>=0.25.0",
    "pre-commit>=3.6.0",
    "ruff>=0.1.6",
    "black>=23.11.0",
    "mypy>=1.7.0",
    "types-requests>=2.31.0",
]

[project.scripts]
dev = "scripts.dev:main"
firebase-emulator = "scripts.firebase:start_emulators"
seed-data = "scripts.seed:main"
test-with-emulator = "scripts.test:main"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
env = [
    "ENVIRONMENT=test",
    "FIREBASE_AUTH_EMULATOR_HOST=localhost:9099",
    "FIRESTORE_EMULATOR_HOST=localhost:8080",
    "FIREBASE_STORAGE_EMULATOR_HOST=localhost:9199",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused-function-args
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "TID",    # flake8-tidy-imports
    "Q",      # flake8-quotes
    "PL",     # pylint
    "PT",     # flake8-pytest-style
]
ignore = [
    "E501",   # line too long, handled by black
    "PLR0913", # too many arguments
    "PLR0911", # too many return statements
    "PLR2004", # magic value used in comparison
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["app"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
strict_concatenate = true

[[tool.mypy.overrides]]
module = [
    "firebase_admin.*",
    "google.cloud.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["app"]
omit = [
    "app/__init__.py",
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]